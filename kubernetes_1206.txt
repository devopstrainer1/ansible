root@master1 tmp]# cat a.yml 
apiVersion: v1
kind: Pod
metadata:
 name: amit
spec:
 containers:
  - name: rajender
    image: alpine
    command: ["/bin/sh", "-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out; sleep 200;"]
[root@master1 tmp]# cat b.yml 
apiVersion: v1
kind: Pod
metadata:
 name: amit1
spec:
 containers:
  - name: rajender
    image: alpine
    command: ["/bin/sh", "-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out; sleep 200;"]
    volumeMounts:
     - name: external-vol
       mountPath: /opt
 volumes:
  - name: external-vol
    hostPath:
      path: /tmp
      type: Directory
[root@master1 tmp]# cat c.yml 
apiVersion: v1
kind: Pod
metadata:
 name: amit2
spec:
 containers:
  - name: rajender
    image: alpine
    command: ["/bin/sh", "-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out; sleep 200;"]
    volumeMounts:
     - name: external-vol
       mountPath: /opt
 volumes:
  - name: external-vol
    persistentVolumeClaim:
     claimName: myclaim
[root@master1 tmp]# cat pv.yml 
apiVersion: v1
kind: PersistentVolume
metadata:
 name: pv1
spec:
 capacity:
  storage: 1Gi
 accessModes:
  - ReadWriteOnce
 hostPath:
  path: /tmp/data
[root@master1 tmp]# cat pvc.yml 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: myclaim
spec:
 accessModes:
  - ReadWriteOnce
 resources:
  requests:
   storage: 500Mi

[root@master1 tmp]# cat secret.yml 
apiVersion: v1
kind: Pod
metadata:
 name: database
spec:
 containers:
  - name: mysql
    image: mysql
    env:
     - name: MYSQL_ROOT_PASSWORD
       valueFrom:
        secretKeyRef:
         name: randy
         key: password
[root@master1 tmp]#

    3  yum install -y docker
    4  service docker start
    5  cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

    6  sudo setenforce 0
    7  sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    8  sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
    9  sudo systemctl enable --now kubelet
   10  yum install -y yum-utils
   11  yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
   12  yum install -y containerd.io
   13  sudo mkdir -p /etc/containerd
   14  containerd config default | sudo tee /etc/containerd/config.toml
   15  systemctl restart containerd
   16  cd /var/run
   17  ls
   18  hostname -i
   19  kubeadm init --apiserver-advertise-address=10.128.0.39 --pod-network-cidr=192.168.0.0/16
   20  mkdir -p $HOME/.kube
   21    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   22    sudo chown $(id -u):$(id -g) $HOME/.kube/config
   23  kubectl get nodes
   24  kubectl get nodes
   25  kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
   26  watch kubectl get nodes
   27  kubectl get nodes
   28  kubectl version
   29  kubectl version --short
   30  kubectl run pod1 --image nginx
   31  kubectl get pods
   32  kubectl get pods -o wide
   33  kubbectl get nodes
   34  kubectl get nodes
   35  kubectl describe node slave1
   36  clear
   37  kubectl create deployment mydeployment --image httpd --replicas 4 --port 80 --dry-run=client -o yaml
   38  kubectl create deployment mydeployment --image httpd --replicas 4 --port 80
   39  kubectl get deployment
   40  kubectl describe deployment mydeployment
   41  kubectl get all
   42  kubectl delete pod mydeployment-5844974766-2hwmr
   43  kubectl get all
   44  kubectl scale deployment mydeployment --replicas=6
   45  kubectl get all
   46  kubectl scale deployment mydeployment --replicas=3
   47  kubectl get all
   48  kubectl describe deployment mydeployment
   49  kubectl set image deployment mydeployment httpd=nginx
   50  kubectl describe deployment mydeployment
   51  kubectl get all
   52  kubectl rollout history deployment mydeployment
   53  kubectl set image deployment mydeployment httpd=httpd2.4
   54  kubectl rollout history deployment mydeployment
   55  kubectl get pods
   56  kubectl get pods
   57  kubectl rollout history deployment mydeployment
   58  kubectl rollout undo deployment mydeployment --to-revision=1
   59  kubectl get pods
   60  kubectl get pods
   61  kubectl get all
   62  kubectl expose deployment mydeployment --name mysvc --port 8080 --target-port 80
   63  kubectl get svc
   64  curl 10.99.201.41:8080
   65  kubectl expose deployment mydeployment --name mysvc1 --type NodePort --port 8080 --target-port 80
   66  kubectl get svc
   67  curl 10.96.214.22:8080
   68  curl ifconfig.co
   69  kubectl expose deployment mydeployment --name mysvc2 --type Loadbalancer --port 8080 --target-port 80
   70  kubectl expose deployment mydeployment --name mysvc2 --type LoadBalancer --port 8080 --target-port 80
   71  kubectl get svc
   72  kubectl get svc
   73  kubectl get svc
   74  kubectl get svc
   75  kubectl get svc
   76  kubectl get svc
   77  kubectl get svc
   78  kubectl get svc
   79  kubectl get svc
   80  kubectl get svc
   81  kubectl get svc
   82  kubectl get svc
   83  pwd
   84  cd /tmp
   85  vi a.yml
   86  kubectl apply -f a.yml 
   87  kubectl get pods
   88  kubectl exec amit --cat /opt/number.out
   89  kubectl exec amit -- cat /opt/number.out
   90  kubectl exec amit -- cat /opt/number.out
   91  kubectl delete pod amit
   92  kubectl apply -f a.yml 
   93  kubectl exec amit -- cat /opt/number.out
   94  cp a.yml b.yml
   95  vi b.yml 
   96  kubectl apply -f b.yml 
   97  kubectl get all
   98  kubectl get all
   99  kubectl get all
  100  kubectl exec amit1 --cat /opt/number.out
  101  kubectl exec amit1 -- cat /opt/number.out
  102  kubectl delete pod amit1
  103  kubectl apply -f b.yml 
  104  kubectl exec amit1 -- cat /opt/number.out
  105  kubectl get pods -o wide
  106  vi pv.yml
  107  kubectl apply -f pv.yml
  108  vi pv.yml
  109  kubectl apply -f pv.yml
  110  vi pv.yml
  111  kubectl apply -f pv.yml
  112  kubectl get pv
  113  clear
  114  vi pvc.yml
  115  kubectl apply -f pvc.yml
  116  kubectl get pv
  117  kubectl get pvc
  118  kubectl edit pvc myclaim
  119  ls
  120  cp b.yml c.yml
  121  vi c.yml 
  122  kubectl apply -f c.yml 
  123  kubectl get pods
  124  kubectl exec amit2 -- cat /opt/number.out
  125  kubectl delete pod amit2
  126  kubectl apply -f c.yml 
  127  kubectl exec amit2 -- cat /opt/number.out
  128  kubectl describe pod amit1
  129  kubectl logs amit1
  130  kubectl get pods
  131  kubectl run doris --image nginx --env FOO=BAR
  132  kubectl run mysql --image mysql --env MYSQL_ROOT_PASSWORD=mypassword
  133  kubectl create secret generic randy --from-literal password=mysqlrootpassword
  134  kubectl get secrets
  135  kubectl describe secret randy
  136  kubectl get secret -o yaml randy
  137  ls
  138  vi secret.yml
  139  kubectl apply -f secret.yml 
  140  kubectl get pods
  141  kubectl get secrets
  142  kubectl get secret -o yaml randy
  143  echo "bXlzcWxyb290cGFzc3dvcmQ=" | base64 --decode
  144  ls
  145  cat a.yml 
  146  cat b.yml 
  147  cat c.yml 
  148  cat pv.yml 
  149  cat pvc.yml 
  150  cat secret.yml 